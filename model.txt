DiffusionUNet(
  (encoders): ModuleList(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1-2): 2 x ResidualBlock(
      (groupnorm_1): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=32, bias=True)
      (groupnorm_2): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Identity()
    )
    (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (4): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=64, bias=True)
      (groupnorm_2): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
    )
    (5): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=64, bias=True)
      (groupnorm_2): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Identity()
    )
    (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (7): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=128, bias=True)
      (groupnorm_2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
    )
    (8): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=128, bias=True)
      (groupnorm_2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Identity()
    )
    (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    (10-11): 2 x ResidualBlock(
      (groupnorm_1): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=128, bias=True)
      (groupnorm_2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Identity()
    )
  )
  (bottleneck): ModuleList(
    (0-1): 2 x ResidualBlock(
      (groupnorm_1): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=128, bias=True)
      (groupnorm_2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Identity()
    )
  )
  (decoders): ModuleList(
    (0-2): 3 x ResidualBlock(
      (groupnorm_1): GroupNorm(32, 256, eps=1e-05, affine=True)
      (conv_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=128, bias=True)
      (groupnorm_2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
    )
    (3): UpsampleBlock(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (4-5): 2 x ResidualBlock(
      (groupnorm_1): GroupNorm(32, 256, eps=1e-05, affine=True)
      (conv_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=128, bias=True)
      (groupnorm_2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
    )
    (6): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 192, eps=1e-05, affine=True)
      (conv_1): Conv2d(192, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=128, bias=True)
      (groupnorm_2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1))
    )
    (7): UpsampleBlock(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (8): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 192, eps=1e-05, affine=True)
      (conv_1): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=64, bias=True)
      (groupnorm_2): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1))
    )
    (9): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=64, bias=True)
      (groupnorm_2): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
    )
    (10): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 96, eps=1e-05, affine=True)
      (conv_1): Conv2d(96, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=64, bias=True)
      (groupnorm_2): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1))
    )
    (11): UpsampleBlock(
      (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (12): ResidualBlock(
      (groupnorm_1): GroupNorm(32, 96, eps=1e-05, affine=True)
      (conv_1): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=32, bias=True)
      (groupnorm_2): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(96, 32, kernel_size=(1, 1), stride=(1, 1))
    )
    (13-14): 2 x ResidualBlock(
      (groupnorm_1): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (linear_time): Linear(in_features=1024, out_features=32, bias=True)
      (groupnorm_2): GroupNorm(32, 32, eps=1e-05, affine=True)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (residual_layer): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (time_proj): Sequential(
    (0): Linear(in_features=256, out_features=1024, bias=True)
    (1): SiLU()
    (2): Linear(in_features=1024, out_features=1024, bias=True)
  )
  (final_layer): Sequential(
    (0): GroupNorm(32, 32, eps=1e-05, affine=True)
    (1): SiLU()
    (2): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)